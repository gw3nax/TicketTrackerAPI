asyncapi: '2.4.0'
info:
  title: Flight Request and Response API
  version: '1.0.0'
  description: |
    API для взаимодействия с Kafka топиками запросов и ответов по рейсам.
    - **Запросы:** публикуются в топик `queries` с соответствующими заголовками.
    - **Ответы:** читаются из топика, указанного в `application.yml`.

servers:
  kafka:
    url: 'localhost:9092'
    protocol: kafka

channels:
  queries:
    description: |
      Топик для отправки запросов по рейсам.
    publish:
      summary: Отправка запроса на получение данных о рейсах.
      operationId: sendFlightRequest
      message:
        headers:
          type: object
          properties:
            client-name:
              type: string
              description: Имя клиента, отправляющего запрос.
              example: bot
            action:
              type: string
              enum: [POST, PUT, DELETE]
              description: Тип действия, связанного с запросом.
              example: POST
        payload:
          $ref: '#/components/schemas/FlightRequest'

  '{responseTopic}':
    description: |
      Топик для получения ответов на запросы. Топик зависит от имени клиента.
      Пример: `telegram-bot-1-responses`.
    parameters:
      responseTopic:
        description: Название топика для ответов, указанное в `application.yml`.
        schema:
          type: string
          example: telegram-bot-1-responses
    subscribe:
      summary: Получение данных по рейсам.
      operationId: receiveFlightResponse
      message:
        payload:
          $ref: '#/components/schemas/BotFlightRequest'

components:
  schemas:
    FlightRequest:
      type: object
      properties:
        userId:
          type: string
          description: Идентификатор пользователя.
          example: '12345'
        fromPlace:
          type: string
          description: Место отправления.
          example: 'Moscow'
        toPlace:
          type: string
          description: Место назначения.
          example: 'New York'
        fromDate:
          type: string
          format: date
          description: Дата отправления.
          example: '2024-12-15'
        toDate:
          type: string
          format: date
          description: Дата возвращения.
          example: '2024-12-20'
        currency:
          type: string
          description: Валюта.
          example: 'USD'
        price:
          type: number
          format: float
          description: Максимальная цена.
          example: 500.00

    BotFlightRequest:
      type: object
      properties:
        userId:
          type: string
          description: Идентификатор пользователя.
          example: '12345'
        data:
          type: array
          items:
            $ref: '#/components/schemas/BotFlightData'

    BotFlightData:
      type: object
      properties:
        fromPlace:
          type: string
          description: Место отправления.
          example: 'Moscow'
        toPlace:
          type: string
          description: Место назначения.
          example: 'New York'
        departureAt:
          type: string
          format: date
          description: Дата отправления.
          example: '2024-12-15'
        price:
          type: number
          format: float
          description: Цена билета.
          example: 450.00
        airline:
          type: string
          description: Авиакомпания.
          example: 'Aeroflot'
        link:
          type: string
          description: Ссылка на бронирование.
          example: 'https://booking.example.com'

